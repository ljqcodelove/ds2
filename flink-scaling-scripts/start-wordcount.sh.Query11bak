#!/bin/bash

### ### ###  		   ### ### ###

### ### ### INITIALIZATION ### ### ###

### ### ###  		   ### ### ###

### paths configuration ###
FLINK_BUILD_PATH="/root/dannylian/code/ds2/workspace/flink-1.4.1-instrumented/flink-1.4.1/build-target/"
FLINK=$FLINK_BUILD_PATH$"bin/flink"
JAR_PATH="/data/dannylian/LongTune/Query11/flink-examples-ContTune-query11-any-jar-with-dependencies.jar"

### dataflow configuration ###
QUERY_CLASS="ch.ethz.systems.strymon.ds2.flink.nexmark.queries.Query11"
SOURCE_NAME="Source: Custom Source -> Timestamps-Watermarks"
WINDOW_NAME="Session Window -> DummyLatencySink"
SINK_NAME="DummyLatencySink"


### operators and parallelism
if [ "$1" == "" ]; then
    echo "Please provide operators and their initial parallelism"
    exit 1
fi

### parse operator pairs
IFS='#' read -r -a array <<< "$1"
for element in "${array[@]}"
do
    IFS=',' read -r -a parallelism <<< "$element"
        ## search for SOURCE_NAME
    if [ "${parallelism[0]}" == "$SOURCE_NAME" ]; then
        echo "Source parallelism: ${parallelism[@]: -1:1}"
        P_SOURCE="${parallelism[@]: -1:1}"
    fi
    if [ "${parallelism[0]}" == "$WINDOW_NAME" ]; then
        echo "WINDOW parallelism: ${parallelism[@]: -1:1}"
	P1="${parallelism[@]: -1:1}"
    fi
    ## search for FlatMap
    if [ "${parallelism[0]}" == "$SINK_NAME" ]; then
        echo "SINK parallelism: ${parallelism[@]: -1:1}"
        P2="${parallelism[@]: -1:1}"
    fi
done

nohup $FLINK run -d --class $QUERY_CLASS $JAR_PATH --p-bid-source $P_SOURCE --p-window $P1 --p-sink $P1  & > job.out
